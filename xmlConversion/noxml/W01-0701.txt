
	
		This paper presents a novel method that allows a machine learning algorithm following the transformation-based learning paradigm (Brill, 1995) to be applied to multiple classification tasks by training jointly and simultaneously on all fields.
		The motivation for constructing such a system stemsfrom the observation that many tasks in natural language processing are naturally composed of multiple subtasks which need to be resolved simultaneously; also tasks usually learned in isolation can possibly benefit from being learned in a joint framework, asthe signals for the extra tasks usually constitute inductive bias.The proposed algorithm is evaluated in two experiments: in one, the system is used to jointly predict the part-of-speech and text chunks/baseNP chunks of an English corpus; and in the second it is used tolearn the joint prediction of word segment boundaries and part-of-speech tagging for Chinese.
		Theresults show that the simultaneous learning of multiple tasks does achieve an improvement in each taskupon training the same tasks sequentially.
		The part- of-speech tagging result of 96.63% is state-of-the-art for individual systems on the particular train/test split.
	
	
			Transformation-based learning (TBL) (Brill, 1995) is one of the most successful rule-based machine learning algorithms.
			It is a flexible and powerful method which is easily extended to various tasks and domains, and it has been applied to a wide variety of NLP tasks, including part of speech tagging (Brill, 1995), parsing (Brill, 1996) and phrase chunking (Ramshaw and Marcus, 1994; Florian et al., 2000).
			It achieves state-of-the-art performance on several tasks, and has been shown to be fairly resistant to overtraining (Ramshaw and Marcus, 1994).
			The processing of natural language text is usually done through a pipeline of well defined tasks, each extracting specific information.
			For instance, one possible sequence of actions performed could be: 1.
			Tokenize the text;.
	
	
			4.
			Identify and label named entities;.
			5.
			Resolve anaphora..
			In the above scenario, each task is well-defined in itself and is often performed independently and in a specific order.
			There are NLP tasks, however, which consist of closely-related sub-tasks, where the orderand independence is hard to determine for ex ample, the task of part-of-speech (POS) tagging in highly inflective languages such as Czech.
			A POS tag in Czech consists of several sub-tags, includingthe main part-of-speech (e.g. noun, verb), a de tailed part-of-speech (e.g. past tense verb, genitive noun, etc), gender, case, number and some other11 sub-tags.
			Allowing a system to learn the sub tasks jointly is beneficial in this case, as it eliminates the need to define a learning order, and it allows the true dependencies between the sub-tasks to be modeled, while not imposing artificial dependencies among them.The multi-task classification approach we are pre senting in this paper is very similar to the one proposed by Caruana et al.
			(1997).
			Instead of using neural network learning, we are modifyingthe transformation-based learning to able to perform multiple-task classification.
			The new frame work is tested by performing joint POS tagging and base noun-phrase (baseNP) chunking on the Penn Treebank Wall Street Journal corpus (Marcus et al., 1993), and simultaneous word segmentation and POS tagging on the Chinese Treebank&apos;s (Xia et al., 2000).
			In both experiments the jointly trained system outperforms the sequentially-trained system combination.The remainder of the paper is organized as fol lows: Section 2 briefly presents previous approaches to multi-task classification; Section 3 describes thegeneral TBL framework and the proposed modifica tions to it; Section 4 describes the experiments and the results; Section 5 does a qualitative analysis of the behavior of the system, and Section 6 concludes the paper.
			2 Previous Work.
			Multitask Learning(Caruana et al., 1997) analyzes in depth the multitask learning (MTL) paradigm, where individual related tasks are trained together by sharing a com mon representation of knowledge, and shows thatsuch a strategy obtains better results than a single task learning strategy.
			The algorithm of choice there is a backpropagation neural network, and the paradigm is tested on several machine learningtasks, including 1DALVINN (road-following prob lem), 1D-DOORS (locate doorknobs to recognizedoor types) and pneumonia prediction.
			It also con tains an excellent discussion on how and why the MTL paradigm is superior to single-task learning.
			Combining ClassificationsA straightforward way of addressing a multiple clas sification problem is to create a new label for eachobserved combination of the original sub-tags; Ha jic and Hladka (1998) describes such an approach for performing POS tagging in Czech.
			While it has the advantage of not modifying the structure of the original algorithm, it does have some drawbacks:• By increasing the range of possible classifica tions, each individual tag label will have fewer samples associated with it, resulting in datasparseness.
			For example, in Czech, &amp;quot;glueing&amp;quot; to gether the subtags results in 1291 part-of-speechtags, a considerably larger number than in num ber of POS tags in English 55.
			It is arguable that one would need one order or magnitude more Czech data than English data to estimate similarly well the same model parameters.
			• No new class labels will be generated, even if it should be possible to assign a label consisting of sub-parts that were observed in the training set, but whose combination wasn&apos;t actually seen.
			N-Best Rescoring Another trend in a 2-task classification is to use asingle-task classifier for the first task to output n best lists and then use a classifier trained on the joint tasks to select the best candidate that maximizes the joint likelihood.
			Xun et al.
			(2000) performs a jointPOS tagging / baseNP classification by using a sta tistical POS tagger to generate n-best lists of POS tags, and then a Viterbi algorithm to determine thebest candidate that maximizes the joint probabil ity of POS tag/ baseNP chunk.
			Chang and Chen(1993) uses a similar technique to perform word segmentation and POS tagging in Chinese texts.
			Inboth approaches, the joint search obtains better re sults than the ones obtained when the search was performed independently.
	
	
			Transformation-Based Learning The multidimensional training method presented in this paper learns multiple related tasks in parallel, by using the domain specific signals present in eachtraining stream.
			The tasks share a common repre sentation, and rules are allowed to correct any of the errors present in the streams, without imposing ordering restrictions on the type of the individualerrors (i.e. learn POS tagging before baseNP chunk ing).Transformation-based learning (TBL) is well suited to perform in such a framework: • Partial classifications are easily accommodated in the TBL paradigm, as features of the samples (e.g. word, gender, number); • The system can learn rules that correct onesub-classification, then use the corrected sub classification to correct the other classifications, in a seemingly interspersed fashion, as dictated by the data; • The objective function used in TBL usually isthe evaluation measure of the task (e.g. number of errors, F-Measure).
			This allows the al gorithm to work directly toward optimizing its evaluation function.&apos; 3.1 The Standard TBL Algorithm.
			The central idea behind transformation-based learning is to induce an ordered list of rules which progres sively improve upon the current state of the training set.
			An initial assignment is made based on simplestatistics, and rules are then greedily learned to cor rect the existing mistakes until no net improvement can be made.
			The use of a transformation-based system assumes the existence of the following: • An initial state generator;• A set of allowable transform types, or tem plates; • An objective function for learning typically the evaluation function.
			Before learning begins, the training corpus is passed through the initial state generator which assigns to each instance some initial classification.
			The learner then iteratively learns an ordered sequence of rules: 1.
			For each possible transformation, or rule, r that.
			can be applied to the corpus: This distinguishes TBL as a error-driven approach from other feature-based methods such as maximum entropy which adjust parameters to maximize the likelihood of the data; the latter may not be perfectly correlated with the classifier performance.
			(a) Apply the rule to a copy of the current state of the corpus,(b) Score the resulting corpus with the objec tive function; compute the score associated with the applied rule (f (r)) (usually the difference in performance) 2.
			If no rule with a positive objective function.
			score exists, learning is finished.
			Stop.
			3.
			Select the rule with the best score; append it to.
			the list of learned rules; 5.
			Repeat from Step 1..
			At evaluation time, the test data is first initialized by passing it through the initial state generator.
			The rules are then applied to the data in the order in which they were learned.
			The final state of the test data after all the rules have been applied constitutes the output of the system.
			3.2 Multi-task Rule Evaluation Function.
			The algorithm for the multidimensional transformation-based learner (mTBL) can be derived easily from the standard algorithm.
			The only change needed is modifying the objective function to take into account the current state of all the subtags (the classifications of the various sub-tasks): f (r) = 8 sample i=1 where • r is a rule • r (s) is the result of applying rule r to sample s • n is the number of tasks• Si (s) is the score on sub-classification i of sam ple s (1 if is correct and 0 otherwise).
			• wi represent weights that can be assigned to tasks to impose priorities for specific sub-tasks.
			In the experiments, all the weights were set to 1.
	
	

